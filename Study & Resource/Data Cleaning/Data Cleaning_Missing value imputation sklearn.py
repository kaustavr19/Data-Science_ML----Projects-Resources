# -*- coding: utf-8 -*-
"""Data Cleaning_Missing value imputation sklearn.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1v_QIJw29RqjrZFYu6YXskTOno5CLRuLc

# Data Cleaning
## Missing value imputation using Scikit-Learn
### for Numeric and Categorical  Variables/Data
"""

import numpy as np
import pandas as pd
from sklearn.impute import SimpleImputer

train = pd.read_csv(r"K:\KaustavR25\SKILLZ\Data Science & Analysis, ML\Data-Science_ML----Projects-Resources-main\Study & Resource\Data Cleaning\train.csv")
test = pd.read_csv(r"K:\KaustavR25\SKILLZ\Data Science & Analysis, ML\Data-Science_ML----Projects-Resources-main\Study & Resource\Data Cleaning\test.csv")
print("shape of train df = ", train.shape)
print("shape of test df = ", test.shape)

train.head()

X_train = train.drop(columns='SalePrice')
y_train = train['SalePrice']
print("shape of X_train df = ", X_train.shape)
print("shape of y_train df = ", y_train.shape)

"""### Numerical Missing value Imputation"""

num_vars = X_train.select_dtypes(include=['int64','float64']).columns
num_vars

X_train[num_vars].isnull().sum()

imputer_mean = SimpleImputer(strategy='mean')
#imputer_mean = SimpleImputer(strategy='constant', fill_value = ) #for customised imputation

imputer_mean.fit(X_train[num_vars])

imputer_mean.statistics_

imputer_mean.transform(X_train[num_vars])

X_train[num_vars] = imputer_mean.transform(X_train[num_vars])
test[num_vars] = imputer_mean.transform(test[num_vars])

X_train[num_vars].isnull().sum()

test[num_vars].isnull().sum()

"""### Categorical Missing value Imputation"""

cat_vars = X_train.select_dtypes(include=['O']).columns
cat_vars

X_train[cat_vars].isnull().sum()

imputer_mode = SimpleImputer(strategy='most_frequent')
imputer_mode

imputer_mode.fit(X_train[cat_vars])

imputer_mode.statistics_

X_train[cat_vars] = imputer_mode.transform(X_train[cat_vars])
test[cat_vars] = imputer_mode.transform(test[cat_vars])

X_train[cat_vars].isnull().sum()

test[cat_vars].isnull().sum()

